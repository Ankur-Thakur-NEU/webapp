name: Build and Deploy

on:
  push:
    branches: ["main"]
env:
  AWS_REGION: us-east-1
  S3BUCKET: myvpc123-deploymentbucket

jobs:
  packer:
    runs-on: ubuntu-latest
    name: packer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - run: mkdir webapp 
      - run: cp -R WebApp.CloudApi WebApp.Tests WebApp.sln webapp
      - run: cp webapp.service webapp/webapp.service
      - run: zip -r webapp.zip webapp   
      - run: rm -rf webapp


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Packer Init
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: cloudapi.pkr.hcl

      # validate templates
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: cloudapi.pkr.hcl

      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: cloudapi.pkr.hcl
        env:
          PACKER_LOG: 1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{secrets.PROD_AWS_ACCESS_ID}}
          aws-secret-access-key: ${{secrets.PROD_AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      
      - run: |
          export AMI_ID=$(jq -r '.builds[0].artifact_id' manifest.json | cut -d ":" -f2)
          aws ec2 create-launch-template-version --launch-template-id lt-00e1a08dcbcf68a41 --version-description WebVersion2 --source-version 1 --launch-template-data  "{\"ImageId\":\"${AMI_ID}\"}"
          aws autoscaling start-instance-refresh --auto-scaling-group-name myvpc-asg --strategy Rolling --desired-configuration '{"LaunchTemplate":{"LaunchTemplateName":"myvpc-launch-template","Version":"$Latest"}}'
